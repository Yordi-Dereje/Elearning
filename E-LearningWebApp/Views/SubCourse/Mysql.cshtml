@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "UserLayout";
}
<main>
    <div id="partitions">

        <div class="partition">
            <h2>Introduction to MySQL</h2>
            <p>MySQL is an open-source relational database management system (RDBMS) known for its reliability and
                scalability. It is widely used in web applications to store and manage data. Below is a comprehensive
                cheat sheet covering various aspects of MySQL.</p>
        </div>

        <div class="partition">
        <h2>Browsing</h2>
        <code>SHOW DATABASES;</code>
        <code>SHOW TABLES;</code>
        <code>SHOW FIELDS FROM table / DESCRIBE table;</code>
        <code>SHOW CREATE TABLE table;</code>
        <code>SHOW PROCESSLIST;</code>
        <code>KILL process_number;</code>
    </div>

    <div class="partition">
        <h2>Select</h2>
        <code>SELECT * FROM table;</code>
        <code>SELECT * FROM table1, table2;</code>
        <code>SELECT field1, field2 FROM table1, table2;</code>
        <code>SELECT ... FROM ... WHERE condition;</code>
        <code>SELECT ... FROM ... WHERE condition GROUP BY field;</code>
        <code>SELECT ... FROM ... WHERE condition GROUP BY field HAVING condition2;</code>
        <code>SELECT ... FROM ... WHERE condition ORDER BY field1, field2;</code>
        <code>SELECT ... FROM ... WHERE condition ORDER BY field1, field2 DESC;</code>
        <code>SELECT ... FROM ... WHERE condition LIMIT 10;</code>
        <code>SELECT DISTINCT field1 FROM ...;</code>
        <code>SELECT DISTINCT field1, field2 FROM ...;</code>
    </div>

    <div class="partition">
        <h2>Select - Join</h2>
        <code>SELECT ... FROM t1 JOIN t2 ON t1.id1 = t2.id2 WHERE condition;</code>
        <code>SELECT ... FROM t1 LEFT JOIN t2 ON t1.id1 = t2.id2 WHERE condition;</code>
        <code>SELECT ... FROM t1 JOIN (t2 JOIN t3 ON ...) ON ...;</code>
    </div>

    <div class="partition">
        <h2>Conditions</h2>
        <code>field1 = value1;</code>
        <code>field1 <> value1;</code>
        <code>field1 LIKE 'value _ %';</code>
        <code>field1 IS NULL;</code>
        <code>field1 IS NOT NULL;</code>
        <code>field1 IS IN (value1, value2);</code>
        <code>field1 IS NOT IN (value1, value2);</code>
        <code>condition1 AND condition2;</code>
        <code>condition1 OR condition2;</code>
    </div>

    <div class="partition">
        <h2>Create / Open / Delete Database</h2>
        <code>CREATE DATABASE DatabaseName;</code>
        <code>CREATE DATABASE DatabaseName CHARACTER SET utf8;</code>
        <code>USE DatabaseName;</code>
        <code>DROP DATABASE DatabaseName;</code>
        <code>ALTER DATABASE DatabaseName CHARACTER SET utf8;</code>
    </div>

    <div class="partition">
        <h2>Backup Database to SQL File</h2>
        <code>mysqldump -u Username -p dbNameYouWant > databasename_backup.sql;</code>
    </div>

    <div class="partition">
        <h2>Restore from Backup SQL File</h2>
        <code>mysql -u Username -p dbNameYouWant < databasename_backup.sql;</code>
    </div>

    <div class="partition">
        <h2>Repair Tables After Unclean Shutdown</h2>
        <code>mysqlcheck --all-databases;</code>
        <code>mysqlcheck --all-databases --fast;</code>
    </div>

    <div class="partition">
        <h2>Insert</h2>
        <code>INSERT INTO table1 (field1, field2) VALUES (value1, value2);</code>
    </div>

    <div class="partition">
        <h2>Delete</h2>
        <code>DELETE FROM table1 / TRUNCATE table1;</code>
        <code>DELETE FROM table1 WHERE condition;</code>
        <code>DELETE FROM table1, table2 WHERE table1.id1 = table2.id2 AND condition;</code>
    </div>

    <div class="partition">
        <h2>Update</h2>
        <code>UPDATE table1 SET field1=new_value1 WHERE condition;</code>
        <code>UPDATE table1, table2 SET field1=new_value1, field2=new_value2, ... WHERE table1.id1 = table2.id2 AND condition;</code>
    </div>

    <div class="partition">
        <h2>Create / Delete / Modify Table</h2>
        <div class="partition">
            <h3>Create</h3>
            <code>CREATE TABLE table (field1 type1, field2 type2);</code>
            <code>CREATE TABLE table (field1 type1, field2 type2, INDEX (field));</code>
            <code>CREATE TABLE table (field1 type1, field2 type2, PRIMARY KEY (field1));</code>
            <code>CREATE TABLE table (field1 type1, field2 type2, PRIMARY KEY (field1,field2));</code>
            <code>CREATE TABLE table1 (fk_field1 type1, field2 type2, ..., FOREIGN KEY (fk_field1) REFERENCES table2 (t2_fieldA)) [ON UPDATE|ON DELETE] [CASCADE|SET NULL];</code>
            <code>CREATE TABLE table1 (fk_field1 type1, fk_field2 type2, ..., FOREIGN KEY (fk_field1, fk_field2) REFERENCES table2 (t2_fieldA, t2_fieldB));</code>
            <code>CREATE TABLE table IF NOT EXISTS;</code>
            <code>CREATE TEMPORARY TABLE table;</code>
        </div>

        <div class="partition">
            <h3>Drop</h3>
            <code>DROP TABLE table;</code>
            <code>DROP TABLE IF EXISTS table;</code>
            <code>DROP TABLE table1, table2, ...;</code>
        </div>

        <div class="partition">
            <h3>Alter</h3>
            <code>ALTER TABLE table MODIFY field1 type1;</code>
            <code>ALTER TABLE table MODIFY field1 type1 NOT NULL ...;</code>
            <code>ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1;</code>
            <code>ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 NOT NULL ...;</code>
            <code>ALTER TABLE table ALTER field1 SET DEFAULT ...;</code>
            <code>ALTER TABLE table ALTER field1 DROP DEFAULT;</code>
            <code>ALTER TABLE table ADD new_name_field1 type1;</code>
            <code>ALTER TABLE table ADD new_name_field1 type1 FIRST;</code>
            <code>ALTER TABLE table ADD new_name_field1 type1 AFTER another_field;</code>
            <code>ALTER TABLE table DROP field1;</code>
            <code>ALTER TABLE table ADD INDEX (field);</code>
        </div>

        <div class="partition">
            <h3>Change Field Order</h3>
            <code>ALTER TABLE table MODIFY field1 type1 FIRST;</code>
            <code>ALTER TABLE table MODIFY field1 type1 AFTER another_field;</code>
            <code>ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 FIRST;</code>
            <code>ALTER TABLE table CHANGE old_name_field1 new_name_field1 type1 AFTER another_field;</code>
        </div>
    </div>

    <div class="partition">
        <h2>Keys</h2>
        <code>CREATE TABLE table (..., PRIMARY KEY (field1, field2));</code>
        <code>CREATE TABLE table (..., FOREIGN KEY (field1, field2) REFERENCES table2 (t2_field1, t2_field2));</code>
    </div>

    <div class="partition">
        <h2>Main Data Types</h2>
        <code>TINYINT (1o: -128 to +127);</code>
        <code>SMALLINT (2o: +-65 000);</code>
        <code>MEDIUMINT (3o: +-16 000 000);</code>
        <code>INT (4o: +- 2 000 000 000);</code>
        <code>BIGINT (8o: +-9.10^18);</code>
        <p>Precise interval: -(2^(8*N-1)) -> (2^8*N)-1</p>
        <p>⚠ INT(2) = “2 digits displayed” – NOT “number with 2 digits max”</p>
        <code>FLOAT(M,D);</code>
        <code>DOUBLE(M,D);</code>
        <code>FLOAT(D=0->53);</code>
        <p>⚠ 8,3 -> 12345,678 – NOT 12345678,123!</p>
        <code>TIME (HH:MM);</code>
        <code>YEAR (AAAA);</code>
        <code>DATE (AAAA-MM-JJ);</code>
        <code>DATETIME (AAAA-MM-JJ HH:MM; années 1000->9999);</code>
        <code>TIMESTAMP (like DATETIME, but 1970->2038, compatible with Unix);</code>
        <p>VARCHAR (single-line; explicit size);</p>
        <p>TEXT (multi-lines; max size=65535);</p>
        <p>BLOB (binary; max size=65535);</p>
        <p>Variants for TEXT&BLOB: TINY (max=255), MEDIUM (max=~16000), and LONG (max=4Go). Ex: VARCHAR(32), TINYTEXT, LONGBLOB, MEDIUMTEXT</p>
        <code>ENUM ('value1', 'value2', ...) -- (default NULL, or '' if NOT NULL);</code>
    </div>

    <div class="partition">
        <h2>Reset Root Password</h2>
        <p>$ /etc/init.d/mysql stop;</p>
        <p>$ mysqld_safe --skip-grant-tables;</p>
        <p>$ mysql # on another terminal;</p>
        <code>mysql> UPDATE mysql.user SET password=PASSWORD('new_pass') WHERE user='root';</code>
        <p>## Switch back to the mysqld_safe terminal and kill the process using Control + \;</p>
        <p>$ /etc/init.d/mysql start;</p>
        <p>Your commands may vary depending on your OS.</p>
    </div>    </div>
    </main>
